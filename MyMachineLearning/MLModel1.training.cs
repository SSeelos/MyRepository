﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace MyMachineLearning
{
    public partial class MLModel1
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"Feature1", @"Feature1"),new InputOutputColumnPair(@"Feature2", @"Feature2")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Feature1",@"Feature2"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=40,MinimumExampleCountPerLeaf=11,NumberOfIterations=145,MaximumBinCountPerFeature=467,LearningRate=1F,LabelColumnName=@"Label",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=0.909193338338158F,FeatureFraction=1F,L1Regularization=2E-10F,L2Regularization=2.334821183706E-05F}}));

            return pipeline;
        }
    }
}
